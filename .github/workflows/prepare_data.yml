name: Prepare data 
on: push
jobs:
  fetch_arso_data:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction
      - name: Run arso data test
        run: |
          source .venv/bin/activate
          pytest tests/arso_test.py
      - name: Fetch arso data
        run: |
          source .venv/bin/activate
          python src/data/fetch_arso_data.py
      - name: DVC add
        run: |
          source .venv/bin/activate
          dvc add data/raw/data.json
      - name: Commit changes
        run: |
          git config --global user.name 'Rok Rozman'
          git config --global user.email 'rok.rozman2@student.um.si'
          git add .
          git commit -m "Raw arso data with GitHub Actions"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.MY_TOKEN }}
          branch: ${{ github.ref }}

  process_arso_data:
    needs: fetch_arso_data
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Process arso data
        run: |
          source .venv/bin/activate
          python src/data/process_arso_data.py
      - name: DVC add
        run: |
          source .venv/bin/activate
          dvc add data/processed/arso_data.json
      - name: Commit changes
        run: |
          git config --global user.name 'Rok Rozman'
          git config --global user.email 'rok.rozman2@student.um.si'
          git add .
          git commit -m "Process arso data with GitHub Actions"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.MY_TOKEN }}
          branch: ${{ github.ref }}
  # fetch_air_data:
  #   needs: fetch_arso_data
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v3
  #     - name: Set up python
  #       id: setup-python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.9'
  #     - name: Install Poetry
  #       uses: snok/install-poetry@v1
  #       with:
  #         virtualenvs-create: true
  #         virtualenvs-in-project: true
  #         installer-parallel: true

  #     - name: Load cached venv
  #       id: cached-poetry-dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: .venv
  #         key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

  #     - name: Install dependencies
  #       if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
  #       run: poetry install --no-interaction --no-root

  #     - name: Install project
  #       run: poetry install --no-interaction

  #     - name: Run arso data test
  #       run: |
  #         source .venv/bin/activate
  #         pytest tests/air_test.py

  #     - name: Fetch air data
  #       run: |
  #         source .venv/bin/activate
  #         python src/data/fetch_air_data.py
  #     - name: DVC add
  #       run: |
  #         source .venv/bin/activate
  #         dvc add data/raw/weather/air_data.json
  #     - name: Commit changes
  #       run: |
  #         git config --global user.name 'Rok Rozman'
  #         git config --global user.email 'rok.rozman2@student.um.si'
  #         git add .
  #         git commit -m "Raw air data with GitHub Actions"
  #     - name: Push changes
  #       uses: ad-m/github-push-action@master
  #       with:
  #         github_token: ${{ secrets.MY_TOKEN }}
  #         branch: ${{ github.ref }}