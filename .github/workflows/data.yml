name: Data 
on:
  push:
    branches:
      - main
  schedule:
    - cron: '53 12 * * *'
jobs:
  fetch_arso_data:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Install project
        run: poetry install --no-interaction
      
      - name: Run arso data test
        run: |
          source .venv/bin/activate
          pytest tests/arso_test.py
      
      # - name: Fetch arso data
      #   run: |
      #     source .venv/bin/activate
      #     python src/data/fetch_arso_data.py
      
      # - name: DVC add
      #   run: |
      #     source .venv/bin/activate
      #     dvc add data/raw/data.json
      #     dvc remote modify origin --local auth basic 
      #     dvc remote modify origin --local user rokrozman321 
      #     dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
      #     dvc push

      # - name: Commit changes
      #   run: |
      #     git config --global user.name 'Rok Rozman'
      #     git config --global user.email 'rok.rozman2@student.um.si'
      #     git status
      #     git add .
      #     git commit -m "Raw arso data with GitHub Actions"
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.MY_TOKEN }}
      #     branch: ${{ github.ref }}

  process_arso_data:
    needs: fetch_arso_data
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Install project
        run: poetry install --no-interaction
      
      - name: DVC pull
        run: |
          source .venv/bin/activate
          dvc remote modify origin --local auth basic 
          dvc remote modify origin --local user rokrozman321 
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
          dvc pull

      - name: Git pull 
        run: |
          git pull

      # - name: Process arso data
      #   run: |
      #     source .venv/bin/activate
      #     python src/data/process_arso_data.py
      
      # - name: DVC add
      #   run: |
      #     source .venv/bin/activate
      #     cat data/processed/arso_data.csv.dvc
      #     dvc add data/processed/arso_data.csv
      #     dvc remote modify origin --local auth basic 
      #     dvc remote modify origin --local user rokrozman321 
      #     dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
      #     dvc push
      #     cat data/processed/arso_data.csv.dvc

      # - name: Commit changes
      #   run: |
      #     git config --global user.name 'Rok Rozman'
      #     git config --global user.email 'rok.rozman2@student.um.si'
      #     git status
      #     git add .
      #     git commit -m "Raw arso data with GitHub Actions"
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.MY_TOKEN }}
      #     branch: ${{ github.ref }}

  fetch_air_data:
    needs: process_arso_data
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Install project
        run: poetry install --no-interaction

      - name: Git pull 
        run: |
          git pull

      - name: Test for air data
        run: |
          source .venv/bin/activate
          pytest tests/air_test.py

      # - name: Fetch air data
      #   run: |
      #     source .venv/bin/activate
      #     python src/data/fetch_air_data.py

      # - name: dvc add
      #   run: |
      #     source .venv/bin/activate
      #     dvc add data/raw/weather/air_data.json
      #     dvc remote modify origin --local auth basic 
      #     dvc remote modify origin --local user rokrozman321 
      #     dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
      #     dvc push

      # - name: Commit
      #   run: |
      #     git config --global user.name 'Rok Rozman'
      #     git config --global user.email 'rok.rozman2@student.um.si'
      #     git add data/raw/weather/air_data.json.dvc
      #     git commit -m "Raw arso data with GitHub Actions"
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.MY_TOKEN }}
      #     branch: ${{ github.ref }}

  process_air_data:
    needs: fetch_air_data
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Install project
        run: poetry install --no-interaction
      
      - name: DVC pull
        run: |
          source .venv/bin/activate
          dvc remote modify origin --local auth basic 
          dvc remote modify origin --local user rokrozman321 
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
          dvc pull

      - name: Git pull 
        run: |
          git pull

      # - name: Process air data
      #   run: |
      #     source .venv/bin/activate
      #     python src/data/process_air_data.py
      
      # - name: DVC add
      #   run: |
      #     source .venv/bin/activate
      #     cat data/processed/air_data.csv.dvc
      #     dvc add data/processed/air_data.csv
      #     dvc remote modify origin --local auth basic 
      #     dvc remote modify origin --local user rokrozman321 
      #     dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
      #     cat data/processed/air_data.csv.dvc
      #     dvc push

      # - name: Commit changes
      #   run: |
      #     git config --global user.name 'Rok Rozman'
      #     git config --global user.email 'rok.rozman2@student.um.si'
      #     git add .
      #     git commit -m "Raw arso data with GitHub Actions"
      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.MY_TOKEN }}
      #     branch: ${{ github.ref }}

  merge_data:
    needs: process_air_data
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Pull 
        run: |
          git pull

      - name: Pull data DVC
        run: |
          source .venv/bin/activate
          dvc remote modify origin --local auth basic 
          dvc remote modify origin --local user rokrozman321 
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
          dvc pull

      - name: Merge data
        run: |
          source .venv/bin/activate
          python src/data/merge_data.py

      - name: DVC add
        run: |
          source .venv/bin/activate
          dvc add data/processed/merged.csv
          dvc remote modify origin --local auth basic 
          dvc remote modify origin --local user rokrozman321 
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
          dvc push

      - name: Commit changes
        run: |
          git config --global user.name 'Rok Rozman'
          git config --global user.email 'rok.rozman2@student.um.si'
          git add data/processed/merged.csv.dvc
          git commit -m "Merged data with GitHub Actions"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.MY_TOKEN }}
          branch: ${{ github.ref }}

  great_expectations_validation:
    needs: merge_data
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Pull 
        run: |
          git pull

      - name: Pull data DVC
        run: |
          source .venv/bin/activate
          dvc remote modify origin --local auth basic 
          dvc remote modify origin --local user rokrozman321 
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
          dvc pull

      - name: Run Evidently
        run: |
          source .venv/bin/activate
          pwd 
          python great_expectations/checkpoints/run_my_checkpoint.py
      
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "great_expectations/uncommitted/data_docs/local_site"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}   
      # - name: Commit changes
      #   run: |
      #     git config --global user.name 'Rok Rozman'
      #     git config --global user.email 'rok.rozman2@student.um.si'
      #     git add .
      #     git commit -m "Great expectations with GitHub Actions"

      # - name: Push changes
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.MY_TOKEN }}
      #     branch: ${{ github.ref }}

  evidently:
    needs: great_expectations_validation
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Pull 
        run: |
          git pull

      - name: Pull data DVC
        run: |
          source .venv/bin/activate
          dvc remote modify origin --local auth basic 
          dvc remote modify origin --local user rokrozman321 
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
          dvc pull

      - name: Run evidently
        run: |
          source .venv/bin/activate
          python src/data/evendently_getting_started_tutorial.py
      
      - name: Commit changes
        run: |
          git config --global user.name 'Rok Rozman'
          git config --global user.email 'rok.rozman2@student.um.si'
          git add .
          git commit -m "Evidently with GitHub Actions"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.MY_TOKEN }}
          branch: ${{ github.ref }}
    
  split_data_train_model:
    needs: evidently
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Pull 
        run: |
          git pull

      - name: Pull data DVC
        run: |
          source .venv/bin/activate
          dvc remote modify origin --local auth basic 
          dvc remote modify origin --local user rokrozman321 
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
          dvc pull

      - name: Copy current to reference
        run: |
          source .venv/bin/activate
          python src/data/curr_to_ref.py

      - name: Split current data
        run: |
          source .venv/bin/activate
          python src/data/split_test_train.py

      - name: Train model
        env: 
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          source .venv/bin/activate
          python src/models/temp_model.py
      
      - name: Commit changes
        run: |
          git config --global user.name 'Rok Rozman'
          git config --global user.email 'rok.rozman2@student.um.si'
          git add .
          git commit -m "New model with GitHub Actions"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.MY_TOKEN }}
          branch: ${{ github.ref }}