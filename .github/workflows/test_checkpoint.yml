name: test for stats checkpoint

on: push

jobs:
  great_expectations_validation:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Pull 
        run: |
          git pull

      - name: Pull data DVC
        run: |
          source .venv/bin/activate
          dvc remote modify origin --local auth basic 
          dvc remote modify origin --local user rokrozman321 
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD }}
          dvc pull

      - name: Run Checkpoint
        run: |
          source .venv/bin/activate
          pwd 
          python great_expectations/checkpoints/run_my_checkpoint.py
      
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "great_expectations/uncommitted/data_docs/local_site"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}   
      
      - name: Evidently
        run: |
          source .venv/bin/activate
          python src/data/evidently.py
      
      - name: Copy current to reference
        run: |
          source .venv/bin/activate
          python src/data/curr_to_ref.py

      - name: Split current data
        run: |
          source .venv/bin/activate
          python src/data/split_test_train.py

      - name: Train model
        env: 
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        run: |
          source .venv/bin/activate
          python src/models/train_model.py



# tu bi se mogo dodat dvc push in to